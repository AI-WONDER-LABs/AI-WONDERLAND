version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.4.1
  vale: circleci/vale@1.2.0
  go: circleci/go@3.0.2

executors:
  node_executor:
    docker:
      - image: cimg/node:22.15.1
    working_directory: ~/project

  go_executor:
    docker:
      - image: cimg/go:1.24
    working_directory: ~/project

  ruby_executor:
    docker:
      - image: cimg/ruby:3.4
    working_directory: ~/project

commands:
  aws-setup:
    steps:
      - aws-cli/setup:
          aws_access_key_id: ${AWS_ACCESS_KEY_ID}
          aws_secret_access_key: ${AWS_SECRET_ACCESS_KEY}
          region: ${AWS_REGION}

  notify_error:
    parameters:
      message:
        type: string
    steps:
      - run:
          name: Log Error
          when: on_fail
          command: |
            echo "[ERROR] << parameters.message >>"

jobs:
  build:
    executor: node_executor
    steps:
      - checkout
      - run:
          name: Fetch branches matching server-4*
          command: |
            for branch in $(git ls-remote --heads origin | awk '{print $2}' | grep 'refs/heads/server-4' | sed 's|refs/heads/||'); do
              echo "[INFO] Fetching branch: $branch"
              git checkout "$branch"
              git pull origin "$branch"
            done
            git checkout "${CIRCLE_BRANCH}"
      - add_ssh_keys:
          fingerprints:
            - "SHA256:Plac654CPBty6yA26H7QMKCqM0yD1XWds7UwNqOYzJU"
      - run:
          name: Install Node Dependencies
          command: |
            set -e
            echo "[INFO] Installing Node dependencies..."
            npm ci
      - run:
          name: Build the Documentation Site with Antora
          command: |
            set -e
            echo "[INFO] Starting Antora build..."
            npm run build:docs
            echo "[INFO] Antora build completed."
      - store_artifacts:
          path: build
      - persist_to_workspace:
          root: .
          paths:
            - build
      - notify_error:
          message: "Build job failed for branch ${CIRCLE_BRANCH}"

  validate:
    executor: ruby_executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install HTML Proofer
          command: |
            set -e
            echo "[INFO] Installing HTML Proofer gem..."
            sudo gem install html-proofer
      - run:
          name: Run HTML Proofer Validation
          command: |
            set -e
            echo "[INFO] Validating built site with HTML Proofer..."
            # Handle path prefix and ignore search template placeholders
            htmlproofer ./build \
              --ignore-empty-alt \
              --checks 'Links,Images' \
              --disable-external \
              --swap-urls '^/docs/:/' \
              --ignore-files './build/api/v1/index.html,./build/api/v2/index.html' \
              --ignore-urls '[url],[path]'
      - notify_error:
          message: "Validation job failed for branch ${CIRCLE_BRANCH}"

  deploy-production:
    executor: go_executor
    parameters:
      bucket_name:
        description: The name of the s3 bucket where static assets are stored.
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: .
      - aws-setup
      - go/with-cache:
          steps:
            - go/mod-download
            - run:
                name: Deploy Production Site to S3
                command: |
                  echo "[INFO] Deploying production site..."
                  dir=$(mktemp -d)
                  mv build "${dir}/docs"
                  aws s3 sync "${dir}" "s3://<< parameters.bucket_name >>/" \
                    --delete
            - run:
                name: Deploy Redirects to S3
                command: go run ./cmd/create-redirects "<< parameters.bucket_name >>"
            - run:
                name: Validate Redirects
                command: go run ./cmd/validate-redirects https://circleci.com
      - notify_error:
          message: "Production deployment job failed for branch ${CIRCLE_BRANCH}"

workflows:
  lint:
    unless:
      equal: [main, << pipeline.git.branch >>]
    jobs:
      - vale/lint:
          reference_branch: main
          base_dir: docs
  build_validate_and_deploy:
    jobs:
      - build:
          context: circleci-docs-static
      - validate:
          requires: [build]
      - deploy-production:
          requires: [validate]
          filters:
            branches:
              only: main
          context:
            [
              circleci-docs-static,
              docs-platform-assets,
              web-ui-npm,
              web-ui-datadog,
            ]
          bucket_name: "circleci-docs-platform-assets"
